//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ftModel", "Player_IdFK", "player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FT.Models.player), "team_player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FT.Models.team_player), true)]
[assembly: EdmRelationshipAttribute("ftModel", "FK_team_player_teams", "team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FT.Models.team), "team_player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FT.Models.team_player), true)]

#endregion

namespace FT.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ftEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ftEntities object using the connection string found in the 'ftEntities' section of the application configuration file.
        /// </summary>
        public ftEntities() : base("name=ftEntities", "ftEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ftEntities object.
        /// </summary>
        public ftEntities(string connectionString) : base(connectionString, "ftEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ftEntities object.
        /// </summary>
        public ftEntities(EntityConnection connection) : base(connection, "ftEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<player> players
        {
            get
            {
                if ((_players == null))
                {
                    _players = base.CreateObjectSet<player>("players");
                }
                return _players;
            }
        }
        private ObjectSet<player> _players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<team_player> team_player
        {
            get
            {
                if ((_team_player == null))
                {
                    _team_player = base.CreateObjectSet<team_player>("team_player");
                }
                return _team_player;
            }
        }
        private ObjectSet<team_player> _team_player;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<team> teams
        {
            get
            {
                if ((_teams == null))
                {
                    _teams = base.CreateObjectSet<team>("teams");
                }
                return _teams;
            }
        }
        private ObjectSet<team> _teams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplayers(player player)
        {
            base.AddObject("players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the team_player EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToteam_player(team_player team_player)
        {
            base.AddObject("team_player", team_player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToteams(team team)
        {
            base.AddObject("teams", team);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ftModel", Name="player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new player object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static player Createplayer(global::System.Int32 id, global::System.String name)
        {
            player player = new player();
            player.Id = id;
            player.Name = name;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ftModel", "Player_IdFK", "team_player")]
        public EntityCollection<team_player> team_player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_player>("ftModel.Player_IdFK", "team_player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_player>("ftModel.Player_IdFK", "team_player", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ftModel", Name="team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static team Createteam(global::System.Int32 id, global::System.String name)
        {
            team team = new team();
            team.Id = id;
            team.Name = name;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ftModel", "FK_team_player_teams", "team_player")]
        public EntityCollection<team_player> team_player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_player>("ftModel.FK_team_player_teams", "team_player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_player>("ftModel.FK_team_player_teams", "team_player", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ftModel", Name="team_player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class team_player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new team_player object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="team_Id">Initial value of the Team_Id property.</param>
        /// <param name="player_Id">Initial value of the Player_Id property.</param>
        public static team_player Createteam_player(global::System.Int32 id, global::System.Int32 team_Id, global::System.Int32 player_Id)
        {
            team_player team_player = new team_player();
            team_player.Id = id;
            team_player.Team_Id = team_Id;
            team_player.Player_Id = player_Id;
            return team_player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team_Id
        {
            get
            {
                return _Team_Id;
            }
            set
            {
                OnTeam_IdChanging(value);
                ReportPropertyChanging("Team_Id");
                _Team_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team_Id");
                OnTeam_IdChanged();
            }
        }
        private global::System.Int32 _Team_Id;
        partial void OnTeam_IdChanging(global::System.Int32 value);
        partial void OnTeam_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player_Id
        {
            get
            {
                return _Player_Id;
            }
            set
            {
                OnPlayer_IdChanging(value);
                ReportPropertyChanging("Player_Id");
                _Player_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player_Id");
                OnPlayer_IdChanged();
            }
        }
        private global::System.Int32 _Player_Id;
        partial void OnPlayer_IdChanging(global::System.Int32 value);
        partial void OnPlayer_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ftModel", "Player_IdFK", "player")]
        public player player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("ftModel.Player_IdFK", "player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("ftModel.Player_IdFK", "player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<player> playerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<player>("ftModel.Player_IdFK", "player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<player>("ftModel.Player_IdFK", "player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ftModel", "FK_team_player_teams", "team")]
        public team team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("ftModel.FK_team_player_teams", "team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("ftModel.FK_team_player_teams", "team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<team> teamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("ftModel.FK_team_player_teams", "team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<team>("ftModel.FK_team_player_teams", "team", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
